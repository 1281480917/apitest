2019-03-06 15:49:49 [   DEBUG] <module 'data.case.apitalk' from 'E:\\code\\apitest\\data\\case\\apitalk.py'> (dynamic_execution.py:12)
2019-03-06 15:49:49 [   DEBUG] imported_functions_dict:{'api_v1_Account_Login_POST': <function api_v1_Account_Login_POST at 0x000001E9D1B13378>, 'api_v1_Account_LoginOff_GET': <function api_v1_Account_LoginOff_GET at 0x000001E9D1B13488>} (dynamic_execution.py:14)
2019-03-06 15:49:49 [   DEBUG] ('api_v1_Account_Login_POST', '$UserName, $Password') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': ['$UserName', '$Password'], 'kwargs': {}, 'func_name': 'api_v1_Account_Login_POST'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] ('api_v1_Account_LoginOff_GET', '') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': [], 'kwargs': {}, 'func_name': 'api_v1_Account_LoginOff_GET'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] <module 'data.case.apitalk' from 'E:\\code\\apitest\\data\\case\\apitalk.py'> (dynamic_execution.py:12)
2019-03-06 15:49:49 [   DEBUG] imported_functions_dict:{'api_v1_Account_Login_POST': <function api_v1_Account_Login_POST at 0x000001E9D1B13378>, 'api_v1_Account_LoginOff_GET': <function api_v1_Account_LoginOff_GET at 0x000001E9D1B13488>} (dynamic_execution.py:14)
2019-03-06 15:49:49 [   DEBUG] ('api_v1_Account_Login_POST', '$UserName, $Password') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': ['$UserName', '$Password'], 'kwargs': {}, 'func_name': 'api_v1_Account_Login_POST'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] ('api_v1_Account_LoginOff_GET', '') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': [], 'kwargs': {}, 'func_name': 'api_v1_Account_LoginOff_GET'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] <module 'data.case.debugtalk' from 'E:\\code\\apitest\\data\\case\\debugtalk.py'> (dynamic_execution.py:12)
2019-03-06 15:49:49 [   DEBUG] imported_functions_dict:{'gen_random_string': <function gen_random_string at 0x000001E9D1B5F400>, 'gen_md5': <function gen_md5 at 0x000001E9D1B5F488>} (dynamic_execution.py:14)
2019-03-06 15:49:49 [   DEBUG] ('gen_random_string', '5') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': [5], 'kwargs': {}, 'func_name': 'gen_random_string'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] ('gen_md5', '$TOKEN, $json, $random') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': ['$TOKEN', '$json', '$random'], 'kwargs': {}, 'func_name': 'gen_md5'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] ('gen_random_string', '5') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': [5], 'kwargs': {}, 'func_name': 'gen_random_string'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] ('gen_md5', '$TOKEN, $json, $random') (parser.py:30)
2019-03-06 15:49:49 [   DEBUG] function_meta:{'args': ['$TOKEN', '$json', '$random'], 'kwargs': {}, 'func_name': 'gen_md5'} (dynamic_execution.py:60)
2019-03-06 15:49:49 [   DEBUG] get_eval_value:{'name': 'create user which does not exist', 'import_module_functions': ['data.case.debugtalk'], 'variables': [{'TOKEN': 'debugtalk'}, {'json': {'name': 'user', 'password': '123456'}}, {'random': 'xN1Mn'}, {'authorization': '3aed89160b91bd2ddcca82c6a75b96c9'}], 'request': {'url': 'http://127.0.0.1:5000/api/users/1000', 'method': 'POST', 'headers': {'Content-Type': 'application/json', 'random': 'SNkhY', 'authorization': '10e6be7855a6b0f15e9c52c0a4dee594'}, 'json': {'name': 'user', 'password': '123456'}}, 'response': {'status_code': 201, 'success': 'true,', 'msg': 'user created successfully.'}} (test_runner.py:15)
2019-03-06 15:49:49 [    INFO] 执行用例create user which does not exist (test_runner.py:16)
2019-03-06 15:49:49 [    INFO] 请求数据:{'headers': {'Content-Type': 'application/json', 'random': '${gen_random_string(5)}', 'authorization': '${gen_md5($TOKEN, $json, $random)}'}, 'json': {'name': 'user', 'password': '123456'}} (test_runner.py:23)
2019-03-06 15:49:49 [   DEBUG] Starting new HTTP connection (1): 127.0.0.1:5000 (connectionpool.py:205)
2019-03-06 15:49:51 [    INFO] 执行用例Login (test_runner.py:35)
2019-03-06 15:49:51 [    INFO] 请求数据:{'headers': {'Accept': 'application/json', 'User-Agent': 'iOS/10.3', 'Content-Type': 'application/json'}, 'json': {'UserName': 'test001', 'Pwd': 123456, 'VerCode': ''}} (test_runner.py:43)
2019-03-06 15:49:51 [   DEBUG] Starting new HTTP connection (1): 127.0.0.1:5000 (connectionpool.py:205)
2019-03-06 15:49:52 [    INFO] 执行用例Logoff (test_runner.py:35)
2019-03-06 15:49:52 [    INFO] 请求数据:{'headers': {'Accept': 'application/json', 'User-Agent': 'iOS/10.3', 'Content-Type': 'application/json'}} (test_runner.py:43)
2019-03-06 15:49:52 [   DEBUG] Starting new HTTP connection (1): 127.0.0.1:5000 (connectionpool.py:205)
